# Generated by Django 5.2.6 on 2025-09-07 20:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('entries', '0001_initial'),
        ('seasons', '0001_initial'),
        ('tracks', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.PositiveIntegerField(help_text='Round number in the season')),
                ('is_sprint', models.BooleanField(default=False)),
                ('laps', models.PositiveIntegerField(blank=True, help_text='Planned race distance (laps)', null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races', to='seasons.season')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races', to='tracks.track')),
            ],
            options={
                'ordering': ['season_id', 'round', 'is_sprint'],
            },
        ),
        migrations.CreateModel(
            name='RaceResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grid_position', models.PositiveIntegerField(blank=True, null=True)),
                ('finish_position', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('FIN', 'Finished'), ('DNF', 'Did Not Finish'), ('DNS', 'Did Not Start'), ('DSQ', 'Disqualified'), ('DNQ', 'Did Not Qualify')], default='FIN', max_length=4)),
                ('laps_completed', models.PositiveIntegerField(blank=True, null=True)),
                ('time_ms', models.BigIntegerField(blank=True, help_text='Total classified time in ms', null=True)),
                ('gap_ms', models.BigIntegerField(blank=True, help_text='Gap to winner in ms (if classified)', null=True)),
                ('fastest_lap', models.BooleanField(default=False)),
                ('dotd', models.BooleanField(default=False, verbose_name='Driver of the Day')),
                ('pole_position', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('driver_season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='entries.driverseason')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='results.race')),
            ],
            options={
                'ordering': ['race_id', 'finish_position', 'driver_season_id'],
            },
        ),
        migrations.AddConstraint(
            model_name='race',
            constraint=models.UniqueConstraint(fields=('season', 'round', 'is_sprint'), name='uniq_race_per_round'),
        ),
        migrations.AddConstraint(
            model_name='raceresult',
            constraint=models.UniqueConstraint(fields=('race', 'driver_season'), name='uniq_result_per_driver_race'),
        ),
        migrations.AddConstraint(
            model_name='raceresult',
            constraint=models.CheckConstraint(condition=models.Q(('finish_position__gte', 1), ('finish_position__isnull', True), _connector='OR'), name='finish_pos_ge_1_or_null'),
        ),
        migrations.AddConstraint(
            model_name='raceresult',
            constraint=models.CheckConstraint(condition=models.Q(('grid_position__gte', 1), ('grid_position__isnull', True), _connector='OR'), name='grid_pos_ge_1_or_null'),
        ),
        migrations.AddConstraint(
            model_name='raceresult',
            constraint=models.UniqueConstraint(condition=models.Q(('fastest_lap', True)), fields=('race',), name='uniq_fastest_lap_per_race'),
        ),
        migrations.AddConstraint(
            model_name='raceresult',
            constraint=models.UniqueConstraint(condition=models.Q(('dotd', True)), fields=('race',), name='uniq_dotd_per_race'),
        ),
        migrations.AddConstraint(
            model_name='raceresult',
            constraint=models.UniqueConstraint(condition=models.Q(('pole_position', True)), fields=('race',), name='uniq_pole_per_race'),
        ),
    ]
